buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.2.5'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

group = 'com.dsi.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
}


ext {
	springCloudVersion = 'Finchley.SR1'
}

bootJar {
	baseName = 'loan-dsi-ms'
    version = ''
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-openfeign')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.postgresql:postgresql')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile){
  destFile = project.file('build/libs/Dockerfile')
  from 'openjdk:8u171-jre-slim'
  maintainer 'Israel Ortiz Feria "iortizf@elektra.com.mx"'
  copyFile bootJar.baseName+'.jar', '/opt/'+bootJar.baseName+'.jar'
  entryPoint "java"
  defaultCommand '-jar', '/opt/'+bootJar.baseName+'.jar'
  exposePort 8083
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = 'iortizf/'+bootJar.baseName+':' + project.version.toLowerCase()
}

task pushImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
  dependsOn buildImage
  imageName = buildImage.tag
}